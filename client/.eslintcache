[{"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\index.tsx":"1","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\App.tsx":"2","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\pages\\Dashboard.tsx":"3","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\pages\\Login.tsx":"4","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\pages\\Register.tsx":"5","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Navbar\\Navbar.tsx":"6","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Navbar\\ProfilePopover.tsx":"7","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\store.ts":"8","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\reducers\\userReducer.ts":"9","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\types.ts":"10","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\actions\\userActions.ts":"11","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Routes\\PrivateRoute.tsx":"12","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Routes\\PublicRoute.tsx":"13","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Navbar\\SearchBar.tsx":"14","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\reducers\\dataReducer.ts":"15","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Dashboard\\Chat.tsx":"16","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\actions\\dataActions.ts":"17","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Dashboard\\Message.tsx":"18"},{"size":466,"mtime":1612768194820,"results":"19","hashOfConfig":"20"},{"size":2333,"mtime":1613469380112,"results":"21","hashOfConfig":"20"},{"size":743,"mtime":1613323425230,"results":"22","hashOfConfig":"20"},{"size":3937,"mtime":1612632459281,"results":"23","hashOfConfig":"20"},{"size":5196,"mtime":1612634664566,"results":"24","hashOfConfig":"20"},{"size":630,"mtime":1613029885682,"results":"25","hashOfConfig":"20"},{"size":1870,"mtime":1612864276036,"results":"26","hashOfConfig":"20"},{"size":904,"mtime":1612982062540,"results":"27","hashOfConfig":"20"},{"size":1620,"mtime":1612981778938,"results":"28","hashOfConfig":"20"},{"size":522,"mtime":1613852082369,"results":"29","hashOfConfig":"20"},{"size":2449,"mtime":1612771677310,"results":"30","hashOfConfig":"20"},{"size":497,"mtime":1612768502836,"results":"31","hashOfConfig":"20"},{"size":490,"mtime":1612768506535,"results":"32","hashOfConfig":"20"},{"size":3973,"mtime":1613760686163,"results":"33","hashOfConfig":"20"},{"size":998,"mtime":1613852113621,"results":"34","hashOfConfig":"20"},{"size":5984,"mtime":1614361222067,"results":"35","hashOfConfig":"20"},{"size":550,"mtime":1613852076953,"results":"36","hashOfConfig":"20"},{"size":1024,"mtime":1613682777990,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"qw9frr",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\index.tsx",[],["81","82"],"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\App.tsx",["83","84"],"import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport io from \"socket.io-client\";\n// React router\nimport { BrowserRouter as Router, Switch, useHistory } from \"react-router-dom\";\n// Components\nimport PrivateRoute from \"./Routes/PrivateRoute\";\nimport PublicRoute from \"./Routes/PublicRoute\";\n// Pages\nimport Dashboard from \"../pages/Dashboard\";\nimport Login from \"../pages/Login\";\nimport Register from \"../pages/Register\";\n// Chakra UI\nimport { Box } from \"@chakra-ui/react\";\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logoutUser, loginUserById } from \"../redux/actions/userActions\";\nimport { setSocket } from \"../redux/actions/dataActions\";\n// Types\nimport { RootState } from \"../redux/store\";\nimport { UserState } from \"../redux/reducers/userReducer\";\n\nconst App: React.FC = () => {\n  // Hooks\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const userState = useSelector<RootState, UserState>((state) => state.user);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"superchat-auth-token\");\n    if (token) {\n      const decodedToken: any = jwtDecode(token);\n      if (decodedToken.exp * 1000 < Date.now()) {\n        // Expired token\n        dispatch(logoutUser());\n        history.push(\"/login\");\n      } else {\n        // Valid token\n        dispatch(loginUserById(decodedToken.id));\n        axios.defaults.headers.common[\"auth-token\"] = token;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userState.auth) {\n      const newSocket = io(\"localhost:3000\", {\n        query: { id: userState.data?.user.user_id.toString() },\n        port: process.env.PORT || \"3000\",\n      });\n      dispatch(setSocket(newSocket));\n    } else {\n      dispatch(setSocket(null));\n    }\n  }, [userState.auth]);\n\n  return (\n    <Box bg=\"gray.200\" w=\"100vw\" h=\"100vh\">\n      <Router>\n        <Switch>\n          <PrivateRoute\n            exact\n            path=\"/\"\n            auth={userState.auth}\n            component={Dashboard}\n          />\n          <PublicRoute path=\"/login\" auth={userState.auth} component={Login} />\n          <PublicRoute\n            path=\"/register\"\n            auth={userState.auth}\n            component={Register}\n          />\n        </Switch>\n      </Router>\n    </Box>\n  );\n};\n\nexport default App;\n","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\pages\\Dashboard.tsx",[],"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\pages\\Login.tsx",[],"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\pages\\Register.tsx",[],"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Navbar\\ProfilePopover.tsx",["85"],"import React from \"react\";\r\n// Chakra UI\r\nimport {\r\n  Avatar,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverBody,\r\n  Heading,\r\n  Flex,\r\n  Button,\r\n  VStack,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/actions/userActions\";\r\n// Types\r\nimport { RootState } from \"../../redux/store\";\r\nimport { UserState } from \"../../redux/reducers/userReducer\";\r\n\r\nconst ProfilePopover: React.FC = () => {\r\n  // Hooks\r\n  const userState = useSelector<RootState, UserState>((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Popover placement=\"bottom-end\">\r\n      <PopoverTrigger>\r\n        <a>\r\n          <Avatar\r\n            name={userState.data?.user.full_name}\r\n            photourl={userState.data?.user.photo_url || undefined}\r\n            cursor=\"pointer\"\r\n          />\r\n        </a>\r\n      </PopoverTrigger>\r\n      <PopoverContent color=\"black\">\r\n        <PopoverBody>\r\n          <Flex alignItems=\"center\">\r\n            <Avatar\r\n              name={userState.data?.user.full_name}\r\n              photourl={userState.data?.user.photo_url || undefined}\r\n            />\r\n            <VStack ml={3} alignItems=\"flex-start\">\r\n              <Heading size=\"md\">{userState.data?.user.full_name}</Heading>\r\n              <Heading size=\"sm\" fontWeight=\"400\">\r\n                {userState.data?.user.email}\r\n              </Heading>\r\n            </VStack>\r\n          </Flex>\r\n          <Divider orientation=\"horizontal\" mt={4} />\r\n          <Button\r\n            colorScheme=\"blue\"\r\n            variant=\"ghost\"\r\n            w=\"100%\"\r\n            onClick={() => dispatch(logoutUser())}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default ProfilePopover;\r\n","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\store.ts",[],"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\reducers\\userReducer.ts",["86"],"import {\r\n  SET_USER,\r\n  LOGOUT_USER,\r\n  SET_ERROR,\r\n  CLEAR_ERROR,\r\n  START_USER_LOADING,\r\n  STOP_USER_LOADING,\r\n} from \"../types\";\r\n\r\ninterface Action {\r\n  type: string;\r\n  payload: any;\r\n}\r\n\r\nexport interface UserData {\r\n  user_id: number;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  full_name: string;\r\n  password: string;\r\n  created_at: Date;\r\n  photo_url: string | null;\r\n}\r\n\r\nexport interface UserState {\r\n  auth: boolean;\r\n  data: Data | null;\r\n  error: Errors | null;\r\n  loading: boolean;\r\n}\r\n\r\ninterface Data {\r\n  token: string;\r\n  user: UserData;\r\n}\r\n\r\ninterface Errors {\r\n  general?: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email?: string;\r\n  password?: string;\r\n  confirmPassword?: string;\r\n  photoUrl?: string;\r\n}\r\n\r\nconst initialState = {\r\n  auth: false,\r\n  data: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport default (state: UserState = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        auth: true,\r\n        data: action.payload,\r\n      };\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        auth: false,\r\n        data: null,\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case START_USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case STOP_USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\types.ts",[],"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\actions\\userActions.ts",[],"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Routes\\PrivateRoute.tsx",[],"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Routes\\PublicRoute.tsx",[],"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Navbar\\SearchBar.tsx",["87"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { debounce } from \"lodash\";\r\n// Chakra UI\r\nimport {\r\n  Input,\r\n  PopoverContent,\r\n  PopoverBody,\r\n  Popover,\r\n  PopoverTrigger,\r\n  Button,\r\n  Avatar,\r\n  Heading,\r\n} from \"@chakra-ui/react\";\r\n// Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setSelectedUser } from \"../../redux/actions/dataActions\";\r\n// Types\r\nimport { UserData, UserState } from \"../../redux/reducers/userReducer\";\r\nimport { RootState } from \"../../redux/store\";\r\n\r\nconst SearchBar: React.FC = () => {\r\n  // State\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const [searchResults, setSearchResults] = useState<UserData[]>([]);\r\n  const [popoverWidth, setPopoverWidth] = useState<number>(0);\r\n  // Refs\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  // Hooks\r\n  const userState = useSelector<RootState, UserState>((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const searchPeople = async (name: string) => {\r\n    const results = await axios.get(`/api/users?fullName=${name}`);\r\n    setSearchResults(results.data);\r\n    setOpen(true);\r\n  };\r\n\r\n  const debounceFunction = useRef(debounce(searchPeople, 1200));\r\n\r\n  const handleChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.value !== \"\") {\r\n      await debounceFunction.current(e.target.value);\r\n    } else {\r\n      debounceFunction.current.cancel();\r\n    }\r\n  };\r\n\r\n  const handleInputClick = async () => {\r\n    if (inputRef.current && inputRef.current.value !== \"\") {\r\n      await debounceFunction.current(inputRef.current.value);\r\n    }\r\n  };\r\n\r\n  const handleUserClick = (userData: UserData) => {\r\n    setOpen(false);\r\n    dispatch(setSelectedUser(userData));\r\n    if (inputRef.current) {\r\n      inputRef.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  const updatePopoverWidth = () => {\r\n    if (!inputRef.current) return;\r\n    setPopoverWidth(inputRef.current?.offsetWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updatePopoverWidth();\r\n    window.addEventListener(\"resize\", updatePopoverWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Prevent searching yourself\r\n    const validSearchResults = searchResults.filter((searchResult) => {\r\n      return searchResult.user_id !== userState.data?.user.user_id;\r\n    });\r\n    if (validSearchResults.length !== searchResults.length) {\r\n      setSearchResults(validSearchResults);\r\n    }\r\n  }, [searchResults]);\r\n\r\n  return (\r\n    <Popover\r\n      isOpen={open}\r\n      onClose={() => setOpen(false)}\r\n      placement=\"bottom-start\"\r\n    >\r\n      <PopoverTrigger>\r\n        <Input\r\n          type=\"text\"\r\n          bg=\"white\"\r\n          color=\"black\"\r\n          pr={\"10px\"}\r\n          placeholder=\"Chat with people\"\r\n          onChange={handleChange}\r\n          onClick={handleInputClick}\r\n          ref={inputRef}\r\n        />\r\n      </PopoverTrigger>\r\n      <PopoverContent color=\"black\" w={popoverWidth}>\r\n        <PopoverBody>\r\n          {searchResults.length > 0 ? (\r\n            <>\r\n              {searchResults.map((userData) => (\r\n                <Button\r\n                  key={userData.user_id}\r\n                  colorScheme=\"teal\"\r\n                  variant=\"ghost\"\r\n                  w=\"100%\"\r\n                  py={10}\r\n                  leftIcon={\r\n                    <Avatar\r\n                      src={userData.photo_url || undefined}\r\n                      name={userData.full_name}\r\n                    />\r\n                  }\r\n                  justifyContent=\"flex-start\"\r\n                  onClick={() => handleUserClick(userData)}\r\n                >\r\n                  {userData.full_name}\r\n                </Button>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <Heading size=\"sm\" fontWeight=\"400\" textAlign=\"center\" my={3}>\r\n              No Results\r\n            </Heading>\r\n          )}\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\reducers\\dataReducer.ts",["88"],"import {\r\n  SET_SELECTED_USER,\r\n  SET_SOCKET,\r\n  START_DATA_LOADING,\r\n  STOP_DATA_LOADING,\r\n} from \"../types\";\r\nimport { UserData } from \"../reducers/userReducer\";\r\n\r\ninterface Action {\r\n  type: string;\r\n  payload: any;\r\n}\r\n\r\nexport interface DataState {\r\n  socket: SocketIOClient.Socket | null;\r\n  selectedUser: UserData | null;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState = {\r\n  socket: null,\r\n  selectedUser: null,\r\n  loading: false,\r\n};\r\n\r\nexport default (state: DataState = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case SET_SELECTED_USER:\r\n      return {\r\n        ...state,\r\n        selectedUser: action.payload,\r\n      };\r\n    case SET_SOCKET:\r\n      return {\r\n        ...state,\r\n        socket: action.payload,\r\n      };\r\n    case START_DATA_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case STOP_DATA_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Dashboard\\Chat.tsx",["89","90"],"D:\\Programowanie\\Projects\\SuperChat\\client\\src\\redux\\actions\\dataActions.ts",["91","92"],"// Types\r\nimport { Dispatch } from \"redux\";\r\nimport {\r\n  SET_SELECTED_USER,\r\n  SET_SOCKET,\r\n  START_DATA_LOADING,\r\n  STOP_DATA_LOADING,\r\n} from \"../types\";\r\nimport { UserData } from \"../reducers/userReducer\";\r\n\r\nexport const setSelectedUser = (user: UserData | null) => (\r\n  dispatch: Dispatch\r\n) => {\r\n  dispatch({\r\n    type: SET_SELECTED_USER,\r\n    payload: user,\r\n  });\r\n};\r\n\r\nexport const setSocket = (socket: SocketIOClient.Socket | null) => (\r\n  dispatch: Dispatch\r\n) => {\r\n  dispatch({\r\n    type: SET_SOCKET,\r\n    payload: socket,\r\n  });\r\n};\r\n","D:\\Programowanie\\Projects\\SuperChat\\client\\src\\components\\Dashboard\\Message.tsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":44,"column":6,"nodeType":"99","endLine":44,"endColumn":8,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":56,"column":6,"nodeType":"99","endLine":56,"endColumn":22,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":30,"column":9,"nodeType":"105","endLine":30,"endColumn":12},{"ruleId":"106","severity":1,"message":"107","line":55,"column":1,"nodeType":"108","endLine":92,"endColumn":3},{"ruleId":"97","severity":1,"message":"109","line":81,"column":6,"nodeType":"99","endLine":81,"endColumn":21,"suggestions":"110"},{"ruleId":"106","severity":1,"message":"107","line":26,"column":1,"nodeType":"108","endLine":51,"endColumn":3},{"ruleId":"111","severity":1,"message":"112","line":25,"column":11,"nodeType":"113","messageId":"114","endLine":25,"endColumn":18},{"ruleId":"97","severity":1,"message":"109","line":111,"column":6,"nodeType":"99","endLine":111,"endColumn":20,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":6,"column":3,"nodeType":"113","messageId":"118","endLine":6,"endColumn":21},{"ruleId":"116","severity":1,"message":"119","line":7,"column":3,"nodeType":"113","messageId":"118","endLine":7,"endColumn":20},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userState.data?.user.user_id'. Either include them or remove the dependency array.",["123"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'userState.data?.user.user_id'. Either include it or remove the dependency array.",["124"],"@typescript-eslint/no-redeclare","'Message' is already defined.","Identifier","redeclared",["125"],"@typescript-eslint/no-unused-vars","'START_DATA_LOADING' is defined but never used.","unusedVar","'STOP_DATA_LOADING' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [dispatch, history]",{"range":"134","text":"135"},"Update the dependencies array to be: [dispatch, userState.auth, userState.data?.user.user_id]",{"range":"136","text":"137"},"Update the dependencies array to be: [searchResults, userState.data?.user.user_id]",{"range":"138","text":"139"},"Update the dependencies array to be: [selectedUser, userState.data?.user.user_id]",{"range":"140","text":"141"},[1486,1488],"[dispatch, history]",[1796,1812],"[dispatch, userState.auth, userState.data?.user.user_id]",[2432,2447],"[searchResults, userState.data?.user.user_id]",[3244,3258],"[selectedUser, userState.data?.user.user_id]"]